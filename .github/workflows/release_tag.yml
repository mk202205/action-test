# This is a basic workflow to help you get started with Actions

name: Release bundle

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    tags: [ "1.*-alpha*", "1.*-beta*" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Get timestamp
        id: ts
        run: echo "::set-output name=now::$(date +%Y%m%dT%H%M%S)"

      - name: Set version
        run: sh set_version.sh "${{ steps.ts.output.now }}"

      - name: Run test script
        run: sh test.sh

      - name: Package files
        run: |
          tar -czf archive.tar.gz main.txt src/
          sha256sum archive.tar.gz > archive.tar.gz.sha256

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: true
      - name: Upload artifact bundle
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./archive.tar.gz
          asset_name: archive.tar.gz
          asset_content_type: application/gzip
      - name: Upload artifact bundle checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./archive.tar.gz.sha256
          asset_name: archive.tar.gz.sha256
          asset_content_type: plain/text
